<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Global Variable on Insidehand</title>
    <link>/tags/global-variable/</link>
    <description>Recent content in Global Variable on Insidehand</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 11 Oct 2021 17:41:32 +0800</lastBuildDate>
    <atom:link href="/tags/global-variable/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>另外一種方式的依賴控制</title>
      <link>/posts/2021-10-11-%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A8%AE%E6%96%B9%E5%BC%8F%E7%9A%84%E4%BE%9D%E8%B3%B4%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Mon, 11 Oct 2021 17:41:32 +0800</pubDate>
      <guid>/posts/2021-10-11-%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A8%AE%E6%96%B9%E5%BC%8F%E7%9A%84%E4%BE%9D%E8%B3%B4%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;什麼是依賴為什麼要管理&#34;&gt;什麼是依賴，為什麼要管理？&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;任何你不能控制的物件，都是隱藏的依賴&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;具體來說，如果程式完全不寫測試，那麼其實就不用考慮依賴的問題。&lt;/p&gt;&#xA;&lt;p&gt;要管理依賴的理由在於給測試一個介入的途徑。&lt;/p&gt;&#xA;&lt;p&gt;例如說有一個物件是用來追蹤聖誕老人，裡面判斷他有沒有上班。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SantaClausTracker&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isWorking&lt;/span&gt;() -&amp;gt; Bool {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; today = Date()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; month = Calendar.current.components(.month, today)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; day = Calendar.current.components(.day, today)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; month == &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; day == &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;顯然，要這個方法回傳&lt;code&gt;true&lt;/code&gt;的話，就只能在聖誕節當天進行測試。&#xA;其他日子回傳都是&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;這個方法裡面有兩個依賴，一個是&lt;code&gt;Date()&lt;/code&gt;，另一個則是&lt;code&gt;Calendar.current&lt;/code&gt;。&#xA;如果想要把這些依賴變得可控，那麼就是要透過外部傳入。也就是依賴注入（dependency injection）&lt;/p&gt;&#xA;&lt;p&gt;傳統的方法有三：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;建構子注入&lt;/li&gt;&#xA;&lt;li&gt;屬性注入&lt;/li&gt;&#xA;&lt;li&gt;方法參數注入&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;名稱應該足以描述相對應的行為，就不多贅述了。&lt;/p&gt;&#xA;&lt;p&gt;換言之，在程式碼中，只要是&lt;code&gt;使用&lt;/code&gt;的物件，都要記得可以替換。&#xA;舉個例子&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(X&#xA;func somefunction() {&#xA;    Date() &#xA;}&#xA;&#xA;(O&#xA;func somefunction(date: Date) {&#xA;    date &#xA;}&#xA;&#xA;(X&#xA;func somefunction() {&#xA;    URLSession.share&#xA;}&#xA;&#xA;(🔺&#xA;func somefunction(session: URLSession) {&#xA;    session&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那麼，顯然會出現的問題就是「&lt;strong&gt;依賴要怎麼來&lt;/strong&gt;」&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
