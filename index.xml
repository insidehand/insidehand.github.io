<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Insidehand</title>
    <link>/</link>
    <description>Recent content on Insidehand</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 07 Jul 2025 05:10:33 +0800</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mobkins Support</title>
      <link>/posts/apps/mobkins/support/</link>
      <pubDate>Mon, 07 Jul 2025 05:10:33 +0800</pubDate>
      <guid>/posts/apps/mobkins/support/</guid>
      <description>Support information for Mobkins</description>
    </item>
    <item>
      <title>Mobkins privacy term</title>
      <link>/posts/apps/mobkins/privacy_policy/</link>
      <pubDate>Mon, 07 Jul 2025 04:52:33 +0800</pubDate>
      <guid>/posts/apps/mobkins/privacy_policy/</guid>
      <description>Mobkins Privacy Term</description>
    </item>
    <item>
      <title>如何把Server只開放給SSH RSA登入</title>
      <link>/posts/2024-01-05-ssh-only-via-rsa/</link>
      <pubDate>Sat, 20 Jan 2024 23:47:08 +0800</pubDate>
      <guid>/posts/2024-01-05-ssh-only-via-rsa/</guid>
      <description>&lt;p&gt;大家都知道，讓明碼在網路上傳輸是很危險的，所以我們都會使用SSH RSA登入，但是如果你的Server是直接連上網路的話，那麼你的Server就會被駭客不斷的嘗試登入，這時候你就可以使用下面的方法，讓你的Server只開放給SSH RSA登入。&lt;/p&gt;&#xA;&lt;p&gt;原則上有幾個步驟要處理&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;加入SSH公鑰（不然一開始就封閉，除非Server有可以直接操作的螢幕，不然就再也沒辦法控制了）&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;具體加入的方法可以參考&lt;a href=&#34;/posts/2020-06-28-ssh-basic-setup/&#34;&gt;這篇&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;設定防火牆，只開放特定的IP可以連線&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;設定SSH，只開放RSA登入&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;重啟SSH&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;step2-設定防火牆只開放特定的ip可以連線&#34;&gt;Step2. 設定防火牆，只開放特定的IP可以連線&lt;/h2&gt;&#xA;&lt;p&gt;使用編輯器修改下面兩個檔案，並且加入新的設定&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;/etc/hosts.allow&lt;/code&gt;&#xA;&lt;code&gt;/etc/hosts.deny&lt;/code&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/hosts.allow&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/etc/hosts.allow&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 允許所有本地IP（記得修改網段，未必每個人都是192.168.50.xx）&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd: 192.168.50.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/hosts.deny&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 禁止所有來源 IP 的連線&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sshd: ANY&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;step3-設定ssh只開放rsa登入&#34;&gt;Step3. 設定SSH，只開放RSA登入&lt;/h2&gt;&#xA;&lt;p&gt;使用編輯器修改下面檔案，並且加入新的設定&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/ssh/sshd_config&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PubkeyAuthentication yes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PasswordAuthentication no&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;step4-重啟ssh&#34;&gt;Step4. 重啟SSH&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo /etc/init.d/ssh restart&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://officeguide.cc/linux-hosts-allow-deny-restrict-ip-address-tutorial-examples/&#34;&gt;https://officeguide.cc/linux-hosts-allow-deny-restrict-ip-address-tutorial-examples/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>關於Object Oriented Programming的那點事 1</title>
      <link>/posts/2024-01-16-oop1/</link>
      <pubDate>Tue, 16 Jan 2024 11:17:00 +0800</pubDate>
      <guid>/posts/2024-01-16-oop1/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;會寫這篇是因為在工作了幾年之後，發現很多人都不知道什麼是OOP，也不知道OOP的好處。常常會看到重複的程式碼，或是程式碼的可讀性很差。&lt;/p&gt;&#xA;&lt;p&gt;基於取之於社群，用之於社群的精神，想寫一些關於OOP的文章&#xA;希望能夠幫助到一些人，也在寫文章的時候釐清一下自己的想法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什麼是oop-&#34;&gt;什麼是OOP ?&lt;/h2&gt;&#xA;&lt;p&gt;OOP是Object Oriented Programming的縮寫，中文翻譯為物件導向程式設計，是一種程式設計的方法論，這種方法論的核心是將程式中的資料與操作資料的程式碼封裝成一個個的物件，並且透過物件之間的互動來完成程式的功能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;物件導向基本原則&#34;&gt;物件導向基本原則&lt;/h2&gt;&#xA;&lt;p&gt;物件導向的概念有幾個，分別是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;封裝&lt;/code&gt;: 將資料與操作資料的程式碼隱藏在物件內部，只提供介面給外部使用&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;繼承&lt;/code&gt;: 將程式碼中相同的部分抽到父物件，讓不同的子物件可以共用，減少重複的程式碼&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;多型&lt;/code&gt;: 透過相同的介面來達成不同的實作&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;SOLID原則是物件導向的五個基本原則，分別是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;Single Responsibility Principle&lt;/code&gt;: 一個物件只做一件事&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Open/Closed Principle&lt;/code&gt;: 一個物件應該是可以擴充的，但應該避免修改&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Liskov Substitution Principle&lt;/code&gt;: 子物件可以替換父物件&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Interface Segregation Principle&lt;/code&gt;: 物件之間的互動應該相依於介面&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Dependency Inversion Principle&lt;/code&gt;: 高階模組不應該依賴低階模組，兩者都應該依賴抽象&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;物件導向的目的&#34;&gt;物件導向的目的&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Divide and Conquer. - Caesar&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;這些原則其實最終都指向一個基本想法：「可維護」&lt;/p&gt;&#xA;&lt;p&gt;透過這些原則，可以減少重複的程式碼、增加可讀性、並且更容易找到要修改的地方。&lt;/p&gt;</description>
    </item>
    <item>
      <title>關於Object Oriented Programming的那點事 2</title>
      <link>/posts/2024-01-16-oop2/</link>
      <pubDate>Tue, 16 Jan 2024 11:17:00 +0800</pubDate>
      <guid>/posts/2024-01-16-oop2/</guid>
      <description>&lt;h2 id=&#34;實務應用&#34;&gt;實務應用&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;基於這篇是在講概念，所以程式碼的部分就寫個意思，並不能真的執行的。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;這裡也不太想要老調重彈的說一些 Duck, Animal, Dog, Cat 的例子，直接來點實務上面的應用，來說明一下物件導向的優點。&lt;/p&gt;&#xA;&lt;p&gt;在幾年前，我在一家寫POS系統的公司工作，當時需要列印電子發票，公司找了Epson的印表機的代理商，從他們那邊確定了貨源。&lt;/p&gt;&#xA;&lt;p&gt;於是乎，有了以下這段程式碼。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;final&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;EpsonPrinterHelper&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; shared = EpsonPrinterHelper()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;() {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/// 列印發票&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(invoice: Invoice) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; printer = EpsonPrinter()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        printer.setText(invoice.title)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        printer.setText(invoice.date)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        printer.setText(invoice.number)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        printer.print()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        printer.cut()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/// 列印收據&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;print&lt;/span&gt;(receipt: Receipt) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; printer = EpsonPrinter()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/// 結帳頁面&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CheckoutViewController&lt;/span&gt;: UIViewController {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printInvoice&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; invoice = Invoice()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        EpsonPrinterHelper.shared.print(invoice: invoice)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printReceipt&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; receipt = Receipt()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        EpsonPrinterHelper.shared.print(receipt: receipt)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這段程式碼運作起來很正常，很美好，直到公司決定要賣其他廠牌印表機的那一天。&lt;/p&gt;</description>
    </item>
    <item>
      <title>善用Protocol與Protocol Extension</title>
      <link>/posts/2024-01-04-protocol-and-extension/</link>
      <pubDate>Thu, 04 Jan 2024 13:47:08 +0800</pubDate>
      <guid>/posts/2024-01-04-protocol-and-extension/</guid>
      <description>&lt;p&gt;例如說常在SwiftUI &lt;code&gt;List&lt;/code&gt;, &lt;code&gt;ForEach&lt;/code&gt;裡面用到的&lt;code&gt;Identifiable&lt;/code&gt;，&lt;/p&gt;&#xA;&lt;p&gt;每次要做比較的時候都要寫一次&lt;code&gt;Equatable&lt;/code&gt;的等價關係&lt;/p&gt;&#xA;&lt;p&gt;如果善用&lt;code&gt;protocol extenion&lt;/code&gt;的話，就可以針對大部分的&lt;code&gt;Identifiable&lt;/code&gt;做一個通用的擴充&lt;/p&gt;&#xA;&lt;p&gt;所有實作了&lt;code&gt;Identifiable&lt;/code&gt;的對象都可以直接擴充&lt;code&gt;Equatable&lt;/code&gt;，而不用再寫同樣的程式碼&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;注意：這邊只是因為個人開發習慣，所以相同 id 的物件會直接視為相同，&#xA;如果開發需要不同的比對方式，請自行修改。切勿照抄。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;舉個例子，如果目前有一個&lt;code&gt;Student&lt;/code&gt;，需要進行比對&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;classs Student: Equatable, Identifiable {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; id = UUID()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; name: String&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一般寫完這段程式碼以後，要自己實作&lt;code&gt;Equatable&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Student&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; == (lhs: Student, rhs: Student) -&amp;gt; Bool {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      lhs.id == rhs.id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如此，才能使用&lt;code&gt;==&lt;/code&gt;來比對兩個物件是否相等。&lt;/p&gt;&#xA;&lt;p&gt;不過，&lt;/p&gt;&#xA;&lt;p&gt;如果沒有其他情況要特別比對，每次都只是比對&lt;code&gt;id&lt;/code&gt;是否相等，那會產生大量的無用程式碼&lt;/p&gt;&#xA;&lt;p&gt;所以這邊就可以用&lt;code&gt;Protocol Extension&lt;/code&gt;來簡化程式碼。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Equatable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Self&lt;/span&gt;: Identifiable {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; == (lhs: &lt;span style=&#34;color:#66d9ef&#34;&gt;Self&lt;/span&gt;, rhs: &lt;span style=&#34;color:#66d9ef&#34;&gt;Self&lt;/span&gt;) -&amp;gt; Bool {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      lhs.id == rhs.id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣就可以針對所有實作&lt;code&gt;Equatable&lt;/code&gt;與&lt;code&gt;Identifiable&lt;/code&gt;的物件進行一個預設的擴充。&lt;/p&gt;&#xA;&lt;p&gt;如果有不一樣的需求，再自己實作一次介面方法就可以了。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UIKit&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Student&lt;/span&gt;: Equatable, Identifiable {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;(name: String) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;self&lt;/span&gt;.name = name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; id = UUID()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; name: String&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; obj1: Student = .&lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;(name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; obj2: Student = .&lt;span style=&#34;color:#66d9ef&#34;&gt;init&lt;/span&gt;(name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;extension&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Equatable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Self&lt;/span&gt;: Identifiable {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; == (lhs: &lt;span style=&#34;color:#66d9ef&#34;&gt;Self&lt;/span&gt;, rhs: &lt;span style=&#34;color:#66d9ef&#34;&gt;Self&lt;/span&gt;) -&amp;gt; Bool {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        lhs.id == rhs.id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(obj1 == obj2) &lt;span style=&#34;color:#75715e&#34;&gt;// return false&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//extension Student {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//    static func == (lhs: Student, rhs: Student) -&amp;gt; Bool {&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//        lhs.name == rhs.name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//    }&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//print(obj1 == obj2) // return true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>在樹莓派4上執行Swift</title>
      <link>/posts/2024-01-04-swift-on-rpi/</link>
      <pubDate>Thu, 04 Jan 2024 13:47:08 +0800</pubDate>
      <guid>/posts/2024-01-04-swift-on-rpi/</guid>
      <description>&lt;p&gt;之前剛買到樹莓派的時候就有在想，樹莓派上能不能執行Swift&lt;/p&gt;&#xA;&lt;p&gt;但是之前 Swift 要在 arm 架構上執行需要用其他人編譯的一個 Swift-arm 版本，&lt;/p&gt;&#xA;&lt;p&gt;總覺得沒那麼優雅就放棄了這個想法。&lt;/p&gt;&#xA;&lt;p&gt;直到最近閒來無事，想說樹莓派上的一些專案好像很久沒動了，就久違的來研究一下有沒有新的東西可以玩。&lt;/p&gt;&#xA;&lt;p&gt;這邊就不廢話了直接上腳本&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#!/bin/bash&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;set -e&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# check if .az directory exists&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/.swift&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Swift is already installed&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exit &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://download.swift.org/swift-5.9.2-release/ubuntu2004-aarch64/swift-5.9.2-RELEASE/swift-5.9.2-RELEASE-ubuntu20.04-aarch64.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unzip swift-5.9.2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar xzf swift-5.9.2-RELEASE-ubuntu20.04-aarch64.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rename swift-5.9.2 to swift-5.9.2&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv swift-5.9.2-RELEASE-ubuntu20.04-aarch64 swift-5.9.2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Move swift-5.9.2 to .swift&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mv swift-5.9.2 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$HOME&lt;span style=&#34;color:#e6db74&#34;&gt;/.swift/&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Remove zip file&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rm swift-5.9.2-RELEASE-ubuntu20.04-aarch64.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Add swift to path&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$PATH:$HOME/.swift/swift-5.9.2/usr/bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;把內容複製到樹莓派中，並且執行腳本&lt;/p&gt;</description>
    </item>
    <item>
      <title>iOS的OTA發布</title>
      <link>/posts/2022-06-20-ios-ota/</link>
      <pubDate>Mon, 20 Jun 2022 14:34:32 +0800</pubDate>
      <guid>/posts/2022-06-20-ios-ota/</guid>
      <description>&lt;p&gt;常見的iOS發布不外乎為&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;App Store上架&lt;/li&gt;&#xA;&lt;li&gt;Vpp Store上架（大量授權）&lt;/li&gt;&#xA;&lt;li&gt;TestFlight&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;這三種方式都必須要通過審核（至少在寫文章的時候是這樣）&lt;/p&gt;&#xA;&lt;p&gt;那麼，如果只是發布給公司內部的員工使用。&lt;/p&gt;&#xA;&lt;p&gt;例如：給測試人員使用，或是給業務等前線單位試用的時候，也要經過審核的話就非常耗費時間。&lt;/p&gt;&#xA;&lt;p&gt;所以這邊就説說另外一種方式，可以不用通過Apple審核也可以進行發布的方式：&lt;code&gt;Ad Hoc&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;使用Ad Hoc有一個前提，那就是目標手機必須要在開發者帳號下登記過。&lt;/p&gt;&#xA;&lt;p&gt;所以要先檢查&lt;code&gt;provisioning profile&lt;/code&gt;中有沒有手機的UDID。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2024註：&lt;/p&gt;&#xA;&lt;p&gt;這邊建議手機可以在註冊的時候把UUID跟機型、使用者之類的做個表管理一下&lt;/p&gt;&#xA;&lt;p&gt;透過解析 ipa 中的 &lt;code&gt;embbed provision profile&lt;/code&gt; 就能比較輕鬆的找出這個 ipa 有哪些人可以安裝&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;ad-hoc&#34;&gt;Ad Hoc&lt;/h2&gt;&#xA;&lt;p&gt;具體發布大概有以下步驟&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;打包&lt;/li&gt;&#xA;&lt;li&gt;輸出 ipa&lt;/li&gt;&#xA;&lt;li&gt;準備 manifest.plist&lt;/li&gt;&#xA;&lt;li&gt;準備一個可以存取的網路空間(https)&lt;/li&gt;&#xA;&lt;li&gt;準備一個網頁或是QRCode&lt;/li&gt;&#xA;&lt;li&gt;執行下載&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;上述所有步驟裡面，最麻煩的大概就是一定要走https協定這件事。&#xA;所以這部分我覺得分兩個情境來看。&lt;/p&gt;&#xA;&lt;p&gt;如果走的是內網下載，之前有試過用python架設https server，是可以用的。&#xA;&lt;a href=&#34;https://chwang12341.medium.com/coding%E8%B5%B7%E4%BE%86-python-%E4%B8%80%E8%A1%8C%E6%8C%87%E4%BB%A4%E5%B0%B1%E8%83%BD%E8%BC%95%E9%AC%86%E5%BB%BA%E7%AB%8B%E7%B6%B2%E9%A0%81%E4%BC%BA%E6%9C%8D%E5%99%A8-simplehttpserver%E5%A5%97%E4%BB%B6-http-server%E4%BD%BF%E7%94%A8%E6%95%99%E5%AD%B8-34c30b81c26&#34;&gt;ref of http&lt;/a&gt;&#xA;&lt;a href=&#34;https://stackoverflow.com/questions/19705785/python-3-simple-https-server&#34;&gt;ref of https&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果走的是外網下載，但是沒有購買SSL憑證。&#xA;那也可以自己建立憑證讓目標手機下載，&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2024註&lt;/p&gt;&#xA;&lt;p&gt;後來好像不行了，建議走 Dropbox 吧&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;先來説說如果不用腳本的話要怎麼做到這些事情。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Xcode中選擇&lt;code&gt;Archive&lt;/code&gt;，打包的時候記得挑好對應的&lt;code&gt;Build Configuration&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;在&lt;code&gt;Organizer&lt;/code&gt;中選擇&lt;code&gt;Distribute App&lt;/code&gt;，選&lt;code&gt;Ad Hoc&lt;/code&gt;，之後就是一路&lt;code&gt;next&lt;/code&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;OTA的選項可以勾也可以不勾，勾起來的話會自動幫你產生一個manifest而已。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;將&lt;code&gt;manifest&lt;/code&gt;中的路徑、bundle identifier等相關資訊修改完&lt;/li&gt;&#xA;&lt;li&gt;將&lt;code&gt;ipa&lt;/code&gt;, &lt;code&gt;manifest&lt;/code&gt; 上傳到網路空間&lt;/li&gt;&#xA;&lt;li&gt;從網頁或是QR Code中執行下載功能。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;整套流程能使用&lt;code&gt;Fastlane&lt;/code&gt;去處理，會方便很多。&#xA;這邊是把最基礎的手動版本寫出來。&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>新公司應該要注意的開發觀念</title>
      <link>/posts/2022-06-19-%E6%96%B0%E5%85%AC%E5%8F%B8%E6%87%89%E8%A9%B2%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%96%8B%E7%99%BC%E8%A7%80%E5%BF%B5/</link>
      <pubDate>Sun, 19 Jun 2022 17:41:32 +0800</pubDate>
      <guid>/posts/2022-06-19-%E6%96%B0%E5%85%AC%E5%8F%B8%E6%87%89%E8%A9%B2%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%96%8B%E7%99%BC%E8%A7%80%E5%BF%B5/</guid>
      <description>&lt;p&gt;最近被之前的同事找回以前離職的公司去幫忙收拾各種前人留下來的爛攤子&lt;/p&gt;&#xA;&lt;p&gt;花了一段時間以後，突然有所體悟。&lt;/p&gt;&#xA;&lt;p&gt;在老闆、主管、工程師都是新手的情況下，&lt;/p&gt;&#xA;&lt;p&gt;&lt;del&gt;在一個公司是新創、員工是新手、老闆不懂技術狀況下&lt;/del&gt;&lt;/p&gt;&#xA;&lt;p&gt;一起合作下去是有一定程度上的難處的。&lt;/p&gt;&#xA;&lt;p&gt;這邊想說也想說做個簡單的記錄，讓自己以後有些資料可以參考。&#xA;也希望這些資料可以對其他人產生幫助。&lt;/p&gt;&#xA;&lt;p&gt;不過這邊都是以工程師的角度出發，&#xA;對於一個資方要怎麼面對勞方我就沒輒了啊。&lt;/p&gt;&#xA;&lt;h2 id=&#34;關於產品&#34;&gt;關於產品&lt;/h2&gt;&#xA;&lt;p&gt;工程師基本也等於魔術師，基本上就是把想像中的產品具現化出來。&#xA;能夠透過一些包裝、手法讓使用者有完全不一樣的使用體驗。&lt;/p&gt;&#xA;&lt;p&gt;但工程師不是魔法師，並不能夠透過念咒來無中生有，跳過研發直接變出產品。&#xA;工程師也不會通靈，並不知道客戶、老闆到底想要什麼東西。&lt;/p&gt;&#xA;&lt;p&gt;所以在跟工程師討論產品開發的過程中，記得不要畫餅，那是慰留工程師的時候才要說的。&lt;/p&gt;&#xA;&lt;p&gt;直接講說希望產品具備什麼功能、想要長什麼樣子、要返回什麼樣的資料就好了。&lt;/p&gt;&#xA;&lt;p&gt;當然這邊也並不是說要細化到每一個細節，包含畫面什麼顏色，資料要有哪些屬性等等。&#xA;有些規劃還是要由工程師來完成的。&lt;/p&gt;&#xA;&lt;p&gt;舉個例子吧，這間公司的老闆常常說「要做一個某某產品」，但是具體的細節一概不知。&#xA;包含目標客群有哪些、需要用到哪些技術、預計什麼時候上市。&lt;/p&gt;&#xA;&lt;p&gt;這在大公司可以，但是在小公司不行。&lt;/p&gt;&#xA;&lt;p&gt;因為在大公司有其他的主管負責分析、研究、規劃等功能，有資源能夠投入，失敗了也並不會影響到公司的生計。&lt;/p&gt;&#xA;&lt;p&gt;小公司一旦賭錯，整個公司都會直接陪進去。&lt;/p&gt;&#xA;&lt;p&gt;至少，大方向要給出來。線上的還是離線的，賣點是硬體還是軟體，商用的還是民用的。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;關於文件&#34;&gt;關於文件&lt;/h2&gt;&#xA;&lt;p&gt;所有產品、功能在具現化的過程都是不斷地溝通討論。&#xA;產品在具現化的過程中必須要留下一些資料。&#xA;基本的就是研究數據、使用情境、開發環境。&lt;/p&gt;&#xA;&lt;p&gt;這部分都統稱為「文件」&lt;/p&gt;&#xA;&lt;p&gt;文件的撰寫與程式碼的註解基本保持一個原則：&#xA;「不要告訴我What，告訴我Why。」&lt;/p&gt;&#xA;&lt;p&gt;舉個「沒用」的例子&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// 設定背景顏色，如果someCondition為真為黑色，為假則是藍色&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;view.background = someCondition ? .black : .blue&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這種註解，不寫會更好。因為程式碼就能看得出來。&#xA;程式碼看不出來的是：「為什麼是藍色跟黑色」。&lt;/p&gt;&#xA;&lt;p&gt;開發過程中留下的文件也一樣。&lt;/p&gt;&#xA;&lt;p&gt;寫下「&lt;strong&gt;為什麼這樣寫&lt;/strong&gt;」比起「&lt;strong&gt;這裡寫了什麼&lt;/strong&gt;」更為重要。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;開發文件一定要留。可以不用畫多專業的UML圖、做多精美的PPT、Word。&#xA;但至少這功能想表達什麼要寫個文件。&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;關於程式碼&#34;&gt;關於程式碼&lt;/h2&gt;&#xA;&lt;p&gt;對於程式碼來說，一定要有一套&lt;code&gt;Coding Style&lt;/code&gt;的工具，而且共同開發同一個專案的工程師必須要認同這裡面的一些規則。&lt;/p&gt;&#xA;&lt;p&gt;至於Coding Style工具的選擇，基本上每套語言幾乎都會有屬於自己的lint工具以及官方的推薦的naming規則。&lt;/p&gt;&#xA;&lt;p&gt;套用style的時機，可以設計在IDE要build code的時候，或是版控commit之前。&lt;/p&gt;&#xA;&lt;p&gt;程式碼有幾個注意點：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;註解掉的程式碼請直接刪除，請用版控保護你的程式碼，而不是靠註解掉的程式碼。&lt;/li&gt;&#xA;&lt;li&gt;IDE自動產生的註解記得拿掉，例如說前人有很多的&lt;code&gt;TODO: //Auto generate method stub&lt;/code&gt;留在那邊，不知道為什麼。&lt;/li&gt;&#xA;&lt;li&gt;不要留下`20220603 modified這樣子的程式碼在上面。除了告訴後面的人你不會用版控以外，並沒有任何幫助。&lt;/li&gt;&#xA;&lt;li&gt;變數命名不要命一些aa bb，也不要留一堆print(++++)之類的東西&lt;/li&gt;&#xA;&lt;li&gt;不要在程式碼裡面留下常數，全部都請拿去定義。&#xA;&lt;ul&gt;&#xA;&lt;li&gt;3.14請定義成pi&lt;/li&gt;&#xA;&lt;li&gt;errorCode請定義成有意義的名稱&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;關於版本控制&#34;&gt;關於版本控制&lt;/h2&gt;&#xA;&lt;p&gt;版本控制，我現在的理解就是：「所有的記錄都可以被追蹤」&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kobo Nickel Menu的用法</title>
      <link>/posts/2021-11-11-kobo-nickel-menu%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Thu, 11 Nov 2021 16:07:08 +0800</pubDate>
      <guid>/posts/2021-11-11-kobo-nickel-menu%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>&lt;p&gt;如果要用kobo來看txt或是從calibre導入書籍有諸多不便，&lt;/p&gt;&#xA;&lt;p&gt;有聽說其他閱讀軟體可以抓但是有點懶得弄。&lt;/p&gt;&#xA;&lt;p&gt;後來看到大神的blog，有統整了怎麼安裝第三方閱讀器，就順便抓了一下。&lt;/p&gt;&#xA;&lt;p&gt;Koreader功能是真的多，但是相對的電力也是噴很快。不過書本的啟動速度還是比官方慢了一點。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;但是傳資料還是一個痛點。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;經歷各種不方便，後來無意中發現已經有大神寫好一個工具方便使用，那就是&lt;code&gt;Nickel Menu&lt;/code&gt;&#xA;這就是本篇的重點。&lt;/p&gt;&#xA;&lt;p&gt;基本上先參考這個連結來安裝第三方閱讀器，具體要安裝哪一個就看個人需求。&#xA;&lt;a href=&#34;https://chiahsien.github.io/post/alternative-kobo-e-reader-koreader-and-plato/&#34;&gt;安裝第三方閱讀器&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;安裝完以後右下角會出現一個&lt;code&gt;Nickel Menu&lt;/code&gt;的功能選項，裡面的選項是可以自訂的。下面會說明&lt;/p&gt;&#xA;&lt;p&gt;流程概略是這樣：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;安裝第三方閱讀器&lt;/li&gt;&#xA;&lt;li&gt;打開KOReader&lt;/li&gt;&#xA;&lt;li&gt;在KOReader中打開SSH Server&lt;/li&gt;&#xA;&lt;li&gt;連線進Kobo，進到&lt;code&gt;/mnt/onboard/.adds/nm&lt;/code&gt;資料夾&lt;/li&gt;&#xA;&lt;li&gt;建立一個檔案，檔名自訂，不要加上副檔名&lt;del&gt;不確定加了會怎麼樣，可以自行嘗試，概不負責啊&lt;/del&gt;&lt;/li&gt;&#xA;&lt;li&gt;加入想要的命令&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;整體操作大致流程是這樣，前三點就不說了，直接從第四點往下講&lt;/p&gt;&#xA;&lt;p&gt;進到&lt;code&gt;/mnt/onboard/.adds/nm&lt;/code&gt;這邊後，裡面基本上會有一個doc檔，&#xA;裡面就是文件說明。&lt;/p&gt;&#xA;&lt;p&gt;建議可以用&lt;code&gt;cp&lt;/code&gt;複製一份以後，直接用&lt;code&gt;vi&lt;/code&gt;或是&lt;code&gt;nano&lt;/code&gt;來編輯。&#xA;下面有很多的範例可供參考&lt;/p&gt;&#xA;&lt;p&gt;這邊列一些我覺得比較實用的&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Reboot&#xA;menu_item               :main :Reboot :power :reboot&#xA;&#xA;# Refresh library&#xA;menu_item               :main :Import books       :nickel_misc        :rescan_books_full&#xA;&#xA;# Force Wifi On/Off&#xA;menu_item               :main :Force Wi-Fi On (toggle)       :nickel_setting        :toggle:force_wifi&#xA;&#xA;# Toggle Telnet&#xA;menu_item               :main :Telnet (toggle)    :cmd_output         :500:quiet :/usr/bin/pkill -f &amp;#34;^/usr/bin/tcpsvd -E 0.0.0.0 2023&amp;#34;&#xA;  chain_success:skip:5&#xA;    chain_failure                      :cmd_spawn          :quiet :/bin/mount -t devpts | /bin/grep -q /dev/pts || { /bin/mkdir -p /dev/pts &amp;amp;&amp;amp; /bin/mount -t devpts devpts /dev/pts; }&#xA;    chain_success                      :cmd_spawn          :quiet :exec /usr/bin/tcpsvd -E 0.0.0.0 2023 /usr/sbin/telnetd -i -l /bin/login&#xA;    chain_success                      :dbg_toast          :Started Telnet server on port 2023&#xA;    chain_failure                      :dbg_toast          :Error starting Telnet server on port 2023&#xA;    chain_always:skip:-1&#xA;  chain_success                        :dbg_toast          :Stopped Telnet server on port 2023&#xA;&#xA;# Open FTP&#xA;menu_item               :main    :FTP                :cmd_spawn          :quiet:/usr/bin/pkill -f &amp;#34;^/usr/bin/tcpsvd -E 0.0.0.0 1021&amp;#34; || true &amp;amp;&amp;amp; exec /usr/bin/tcpsvd -E 0.0.0.0 1021 /usr/sbin/ftpd -w -t 30 /mnt/onboard&#xA;  chain_success                        :dbg_toast          :Started FTP server for KOBOeReader partition on port 1021.&#xA;&#xA;# Show IP&#xA;menu_item               :main    :IP Address         :cmd_output         :500:/sbin/ifconfig | /usr/bin/awk &amp;#39;/inet addr/{print substr($2,6)}&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mac端基本設定&#34;&gt;mac端基本設定&lt;/h2&gt;&#xA;&lt;p&gt;這邊是用macOS，但是基於安全性macOS已經移除了&lt;code&gt;telnet&lt;/code&gt;這個套件&#xA;所以要先安裝&lt;code&gt;telnet&lt;/code&gt;，這邊推薦用&lt;code&gt;inetutils&lt;/code&gt;，裡面就包含了&lt;code&gt;telnet, FTP&lt;/code&gt;等&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git常用命令筆記</title>
      <link>/posts/2021-11-10-git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AD%86%E8%A8%98/</link>
      <pubDate>Wed, 10 Nov 2021 23:47:08 +0800</pubDate>
      <guid>/posts/2021-11-10-git-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AD%86%E8%A8%98/</guid>
      <description>Git常用命令筆記</description>
    </item>
    <item>
      <title>EnterHealth Support</title>
      <link>/posts/apps/enterhealth/support/</link>
      <pubDate>Tue, 09 Nov 2021 19:18:33 +0800</pubDate>
      <guid>/posts/apps/enterhealth/support/</guid>
      <description>EnterHealth support</description>
    </item>
    <item>
      <title>EnterHealth Terms</title>
      <link>/posts/apps/enterhealth/terms_and_privacy_policy/</link>
      <pubDate>Tue, 09 Nov 2021 19:18:33 +0800</pubDate>
      <guid>/posts/apps/enterhealth/terms_and_privacy_policy/</guid>
      <description>EnterHealth terms and privacy policy</description>
    </item>
    <item>
      <title>LooPlayer privacy term</title>
      <link>/posts/apps/looplayer/privacy_policy/</link>
      <pubDate>Tue, 09 Nov 2021 19:18:33 +0800</pubDate>
      <guid>/posts/apps/looplayer/privacy_policy/</guid>
      <description>LooPlayer support</description>
    </item>
    <item>
      <title>Requestflow Support</title>
      <link>/posts/apps/requestflow/privacy_policy/</link>
      <pubDate>Tue, 09 Nov 2021 19:18:33 +0800</pubDate>
      <guid>/posts/apps/requestflow/privacy_policy/</guid>
      <description>Requestflow support</description>
    </item>
    <item>
      <title>如何快速找到Simulator的Document位置</title>
      <link>/posts/2021-11-09-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%89%BE%E5%88%B0simulator%E7%9A%84document%E4%BD%8D%E7%BD%AE/</link>
      <pubDate>Tue, 09 Nov 2021 19:18:33 +0800</pubDate>
      <guid>/posts/2021-11-09-%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%89%BE%E5%88%B0simulator%E7%9A%84document%E4%BD%8D%E7%BD%AE/</guid>
      <description>&lt;h1 id=&#34;如何快速找到simulator的document位置&#34;&gt;如何快速找到Simulator的Document位置&lt;/h1&gt;&#xA;</description>
    </item>
    <item>
      <title>另外一種方式的依賴控制</title>
      <link>/posts/2021-10-11-%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A8%AE%E6%96%B9%E5%BC%8F%E7%9A%84%E4%BE%9D%E8%B3%B4%E6%8E%A7%E5%88%B6/</link>
      <pubDate>Mon, 11 Oct 2021 17:41:32 +0800</pubDate>
      <guid>/posts/2021-10-11-%E5%8F%A6%E5%A4%96%E4%B8%80%E7%A8%AE%E6%96%B9%E5%BC%8F%E7%9A%84%E4%BE%9D%E8%B3%B4%E6%8E%A7%E5%88%B6/</guid>
      <description>&lt;h2 id=&#34;什麼是依賴為什麼要管理&#34;&gt;什麼是依賴，為什麼要管理？&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;任何你不能控制的物件，都是隱藏的依賴&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;具體來說，如果程式完全不寫測試，那麼其實就不用考慮依賴的問題。&lt;/p&gt;&#xA;&lt;p&gt;要管理依賴的理由在於給測試一個介入的途徑。&lt;/p&gt;&#xA;&lt;p&gt;例如說有一個物件是用來追蹤聖誕老人，裡面判斷他有沒有上班。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-swift&#34; data-lang=&#34;swift&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SantaClausTracker&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isWorking&lt;/span&gt;() -&amp;gt; Bool {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; today = Date()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; month = Calendar.current.components(.month, today)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; day = Calendar.current.components(.day, today)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; month == &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; day == &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;顯然，要這個方法回傳&lt;code&gt;true&lt;/code&gt;的話，就只能在聖誕節當天進行測試。&#xA;其他日子回傳都是&lt;code&gt;false&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;p&gt;這個方法裡面有兩個依賴，一個是&lt;code&gt;Date()&lt;/code&gt;，另一個則是&lt;code&gt;Calendar.current&lt;/code&gt;。&#xA;如果想要把這些依賴變得可控，那麼就是要透過外部傳入。也就是依賴注入（dependency injection）&lt;/p&gt;&#xA;&lt;p&gt;傳統的方法有三：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;建構子注入&lt;/li&gt;&#xA;&lt;li&gt;屬性注入&lt;/li&gt;&#xA;&lt;li&gt;方法參數注入&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;名稱應該足以描述相對應的行為，就不多贅述了。&lt;/p&gt;&#xA;&lt;p&gt;換言之，在程式碼中，只要是&lt;code&gt;使用&lt;/code&gt;的物件，都要記得可以替換。&#xA;舉個例子&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(X&#xA;func somefunction() {&#xA;    Date() &#xA;}&#xA;&#xA;(O&#xA;func somefunction(date: Date) {&#xA;    date &#xA;}&#xA;&#xA;(X&#xA;func somefunction() {&#xA;    URLSession.share&#xA;}&#xA;&#xA;(🔺&#xA;func somefunction(session: URLSession) {&#xA;    session&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那麼，顯然會出現的問題就是「&lt;strong&gt;依賴要怎麼來&lt;/strong&gt;」&lt;/p&gt;</description>
    </item>
    <item>
      <title>關於GCD的一些筆記-1</title>
      <link>/posts/2020-06-29-gcd%E7%AD%86%E8%A8%98-01/</link>
      <pubDate>Mon, 29 Jun 2020 19:18:33 +0800</pubDate>
      <guid>/posts/2020-06-29-gcd%E7%AD%86%E8%A8%98-01/</guid>
      <description>關於GCD的一些筆記</description>
    </item>
    <item>
      <title>SSH 基本設定</title>
      <link>/posts/2020-06-28-ssh-basic-setup/</link>
      <pubDate>Sun, 28 Jun 2020 18:34:47 +0800</pubDate>
      <guid>/posts/2020-06-28-ssh-basic-setup/</guid>
      <description>ssh到GitHub的時候，使用私鑰進行驗證</description>
    </item>
    <item>
      <title>Hello World</title>
      <link>/posts/2020-06-28-hello-world/</link>
      <pubDate>Sun, 28 Jun 2020 16:06:07 +0800</pubDate>
      <guid>/posts/2020-06-28-hello-world/</guid>
      <description>Hello Hugo</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/2022-06-20-%E5%B7%A5%E7%A8%8B%E5%B8%AB%E6%87%89%E8%A9%B2%E5%85%B7%E5%82%99%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%8C%96%E6%A6%82%E5%BF%B5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/2022-06-20-%E5%B7%A5%E7%A8%8B%E5%B8%AB%E6%87%89%E8%A9%B2%E5%85%B7%E5%82%99%E7%9A%84%E6%8A%BD%E8%B1%A1%E5%8C%96%E6%A6%82%E5%BF%B5/</guid>
      <description>&lt;p&gt;用Aido &amp;amp; Aido baby的例子來說明抽象化的概念&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/2024-01-05-raspberry-pi-usb-gadget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/2024-01-05-raspberry-pi-usb-gadget/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.hardill.me.uk/wordpress/2019/11/02/pi4-usb-c-gadget/&#34;&gt;https://www.hardill.me.uk/wordpress/2019/11/02/pi4-usb-c-gadget/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/data-model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/data-model/</guid>
      <description>&lt;h1 id=&#34;json-開發觀念&#34;&gt;JSON 開發觀念&lt;/h1&gt;&#xA;&lt;p&gt;不要用underline之類的方式來作為JSON的key&lt;/p&gt;&#xA;&lt;p&gt;如果有多個底線相關的key，就應該考慮用object封裝起來。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;  &amp;#34;SomeKeyTitle&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;  &amp;#34;SomeKeyNote&amp;#34;: {&#xA;    &amp;#34;SomeKeyArray&amp;#34;: [&#xA;      {&#xA;        &amp;#34;someKey_node_id&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;        &amp;#34;someKey_list_id&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;        &amp;#34;otherKey_type&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;        &amp;#34;otherKey_time&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;      }      &#xA;    ]&#xA;  },&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;改成&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;  &amp;#34;SomeKey&amp;#34;: {&#xA;    &amp;#34;Title&amp;#34;: &amp;#34;&amp;#34;,&#xA;    &amp;#34;Notes&amp;#34;: {&#xA;      &amp;#34;Array&amp;#34;: [&#xA;        {&#xA;          &amp;#34;nodeId&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;          &amp;#34;listId&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;          &amp;#34;otherKey&amp;#34;: {&#xA;            &amp;#34;type&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;            &amp;#34;time&amp;#34;: &amp;#34;Value&amp;#34;&#xA;          }&#xA;        }&#xA;      ]&#xA;    }&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;既然一個物件裡面只裝著陣列那爲什麼不直接抽出來將value作為陣列&#34;&gt;既然一個物件裡面只裝著陣列，那爲什麼不直接抽出來將Value作為陣列？&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{&#xA;  &amp;#34;SomeKey&amp;#34;: {&#xA;    &amp;#34;Title&amp;#34;: &amp;#34;&amp;#34;,&#xA;    &amp;#34;Notes&amp;#34;: [&#xA;        {&#xA;          &amp;#34;nodeId&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;          &amp;#34;listId&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;          &amp;#34;otherKey&amp;#34;: {&#xA;            &amp;#34;type&amp;#34;: &amp;#34;Value&amp;#34;,&#xA;            &amp;#34;time&amp;#34;: &amp;#34;Value&amp;#34;&#xA;          }&#xA;        },&#xA;        {&#xA;          xxx&#xA;        }&#xA;     ]&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/gitbook%E6%9E%B6%E8%A8%AD%E9%81%8E%E7%A8%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/gitbook%E6%9E%B6%E8%A8%AD%E9%81%8E%E7%A8%8B/</guid>
      <description>&lt;h1 id=&#34;gitbook架設-part-1&#34;&gt;Gitbook架設 Part 1&lt;/h1&gt;&#xA;&lt;p&gt;根據目前查到的資料，似乎線上版有一些微微妙妙的問題，&#xA;所以這邊打算採用自己架設的做法。&lt;/p&gt;&#xA;&lt;p&gt;因為文件都散落在各個MD檔之中，想說要找找一個方便地管理工具&#xA;有很多東西因為以前比較少碰到，所以也算是粗略做個記錄。&lt;/p&gt;&#xA;&lt;p&gt;以下是踩坑過程。&lt;/p&gt;&#xA;&lt;h2 id=&#34;安裝yarn&#34;&gt;安裝yarn&lt;/h2&gt;&#xA;&lt;p&gt;要安裝Gitbook的時候，網路上搜尋到的是用&lt;code&gt;npm&lt;/code&gt;來安裝。&#xA;然後莫名的就搜尋到新的管理工具&lt;code&gt;yarn&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;秉持著&lt;del&gt;有新的就用新的&lt;/del&gt;原則，就學著用新的工具來安裝看看。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install yarn&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然後就是安裝gitbook套件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yarn global add gitbook gitbook-cli&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因為有很多地方都打算導入&lt;code&gt;gitbook&lt;/code&gt;來管理文件，所以就選用&lt;code&gt;global&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;node-與-nvm&#34;&gt;node 與 nvm&lt;/h2&gt;&#xA;&lt;p&gt;然後按照教學輸入&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gitbook init&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之後就就很順利地炸了。error log如下&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;warn: no summary file in this book&#xA;info: create SUMMARY.md&#xA;&#xA;TypeError [ERR_INVALID_ARG_TYPE]: The &amp;#34;data&amp;#34; argument must be of type string or an instance of Buffer, &#xA;TypedArray, or DataView. Received an instance of Promise&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;發現是&lt;code&gt;node&lt;/code&gt;的版本太新，可以用&lt;code&gt;node -v&lt;/code&gt;來檢查當前的node版本。&lt;/p&gt;&#xA;&lt;p&gt;於是就開始研究&lt;code&gt;nvm&lt;/code&gt;的使用方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;nvm-管理node版本的工具&#34;&gt;nvm: 管理Node版本的工具&lt;/h2&gt;&#xA;&lt;p&gt;使用&lt;code&gt;homebrew&lt;/code&gt;來安裝nvm&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install nvm&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安裝成功後有一些環境變數要設定到.zshrc(或是.bashrc中)&#xA;全部處理完成以後就可以使用nvm來管理node&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;nvm ls-remote&#xA;nvm install v13.14.0&#xA;nvm use v13.14.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;詳細的nvm指令與功能就另外開一篇來寫好了，就不在這邊多說了。&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/mysql/</guid>
      <description>&lt;h1 id=&#34;要放權限給使用者帳號不然會查不到&#34;&gt;要放權限給使用者（帳號），不然會查不到。&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;GRANT ALL PRIVILEGES ON databaseName.tableName ( or * ) TO &amp;lsquo;username&amp;rsquo;@&amp;lsquo;host&amp;rsquo;;&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/nvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/nvm/</guid>
      <description>&lt;h1 id=&#34;node--nvm&#34;&gt;Node &amp;amp; NVM&lt;/h1&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 檢查線上版本&#xA;nvm ls-remote&#xA;&#xA;// 安裝node&#xA;&#xA;// 安裝特定版本&#xA;nvm install v13.14.0&#xA;&#xA;// 安裝穩定版&#xA;nvm install stable&#xA;&#xA;// 檢查已經安裝過的node列表&#xA;nvm ls&#xA;&#xA;// 移除node&#xA;nvm uninstall v14.19.2&#xA;&#xA;// 切換版本&#xA;nvm use v13.14.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;npm&#34;&gt;NPM&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;yarn&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;npm&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;package.json&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;package-lock.json&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://phoeshow.github.io/2017/05/15/Mac%E5%88%A0%E9%99%A4nodejs%E7%9A%84%E6%96%B9%E6%B3%95/&#34;&gt;Ref&lt;/a&gt;&#xA;&lt;a href=&#34;https://medium.com/%E5%93%86%E5%95%A6%E5%AF%A6%E9%A9%97%E5%AE%A4/node-js%E7%AE%A1%E7%90%86%E7%A5%9E%E5%99%A8nvm-b6acfca44ea5&#34;&gt;https://medium.com/哆啦實驗室/node-js管理神器nvm-b6acfca44ea5&lt;/a&gt;&#xA;&lt;a href=&#34;https://segmentfault.com/a/1190000019037664&#34;&gt;https://segmentfault.com/a/1190000019037664&lt;/a&gt;&#xA;&lt;a href=&#34;https://blog.csdn.net/zheng18237111686/article/details/113878602&#34;&gt;https://blog.csdn.net/zheng18237111686/article/details/113878602&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;npm&lt;/strong&gt;&#xA;&lt;a href=&#34;http://dreamerslab.com/blog/tw/npm-basic-commands/&#34;&gt;http://dreamerslab.com/blog/tw/npm-basic-commands/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;yarn&lt;/strong&gt;&#xA;&lt;a href=&#34;https://segmentfault.com/a/1190000008489881&#34;&gt;https://segmentfault.com/a/1190000008489881&lt;/a&gt;&#xA;&lt;a href=&#34;https://simpleit.rocks/javascript/yarn/how-to-search-packages-using-yarn/&#34;&gt;https://simpleit.rocks/javascript/yarn/how-to-search-packages-using-yarn/&lt;/a&gt;&#xA;&lt;a href=&#34;https://yarnpkg.com/cli/init&#34;&gt;https://yarnpkg.com/cli/init&lt;/a&gt;&#xA;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10191888&#34;&gt;https://ithelp.ithome.com.tw/articles/10191888&lt;/a&gt;&#xA;&lt;a href=&#34;https://ithelp.ithome.com.tw/articles/10191745&#34;&gt;https://ithelp.ithome.com.tw/articles/10191745&lt;/a&gt;&#xA;&lt;a href=&#34;http://nodejs.cn/learn/the-package-json-guide&#34;&gt;http://nodejs.cn/learn/the-package-json-guide&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;LTS Long Time Support Node&lt;/strong&gt;&#xA;&lt;a href=&#34;https://www.796t.com/post/bG80Ng==.html&#34;&gt;https://www.796t.com/post/bG80Ng==.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/pop-request-struct/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/pop-request-struct/</guid>
      <description>&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;過去參考喵神的&lt;a href=&#34;https://onevcat.com/2016/12/pop-cocoa-2/&#34;&gt;文章&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;有實做一版簡單的 Request API 架構&lt;/p&gt;&#xA;&lt;p&gt;但是受限於當時的 Swift 語言特性，如果要把 Request 保存起來作為快取相對麻煩&lt;/p&gt;&#xA;&lt;p&gt;其實現在才寫這一篇已經是有點遲了，&lt;/p&gt;&#xA;&lt;p&gt;不過因為 Swift 支援了 &lt;code&gt;any&lt;/code&gt; &lt;code&gt;some&lt;/code&gt; 這種語法，所以可以更簡單的實做這個架構&lt;/p&gt;&#xA;&lt;p&gt;還是想來説說這套寫法的優點&lt;/p&gt;&#xA;&lt;h2 id=&#34;實作&#34;&gt;實作&lt;/h2&gt;&#xA;&lt;p&gt;最早會向整理這些 API 是因為，是因為大部分的 API 都是寫在同一個檔案之中。&lt;/p&gt;&#xA;&lt;p&gt;這樣的寫法會造成檔案過大，不好維護，也不好閱讀。&lt;/p&gt;&#xA;&lt;p&gt;所以希望能找到一個方法，把 API 分類，&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/protocol-extension-/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/protocol-extension-/</guid>
      <description>&lt;h1 id=&#34;extension-for-protocol&#34;&gt;Extension for Protocol&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;先說結論：&#xA;善用protocol來實作一些功能&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Todo: [WWDC talk 連結]&lt;/p&gt;&#xA;&lt;p&gt;在傳統的OOP觀念中，基本上要最小化程式碼重複的方法就是透過繼承。&lt;/p&gt;&#xA;&lt;h2 id=&#34;swift-是針對-protocol-來設計的&#34;&gt;Swift 是針對 protocol 來設計的&lt;/h2&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/redux-in-swift/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/redux-in-swift/</guid>
      <description>&lt;h1 id=&#34;redux-in-swiftui&#34;&gt;Redux in SwiftUI&lt;/h1&gt;&#xA;&lt;p&gt;透過泛型來限制型別&lt;/p&gt;&#xA;&lt;h2 id=&#34;針對sub-view的資料處理&#34;&gt;針對sub-view的資料處理&lt;/h2&gt;&#xA;&lt;h3 id=&#34;sub-state--sub-action--sub-reducer&#34;&gt;sub-state &amp;amp; sub-action &amp;amp; sub-reducer&lt;/h3&gt;&#xA;&lt;h3 id=&#34;store-derived&#34;&gt;Store derived&lt;/h3&gt;&#xA;&lt;h3 id=&#34;view---sub-view-的-connector&#34;&gt;View -&amp;gt; sub-view 的 Connector&lt;/h3&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/shell-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/shell-command/</guid>
      <description>&lt;h1 id=&#34;檢查macbook的ssd使用狀況&#34;&gt;檢查MacBook的SSD使用狀況&lt;/h1&gt;&#xA;&lt;p&gt;sudo smartctl —all /dev/disk0&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/swiftdata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/swiftdata/</guid>
      <description>&lt;h1 id=&#34;swiftdata-踩坑記錄&#34;&gt;SwiftData 踩坑記錄&lt;/h1&gt;&#xA;&lt;h2 id=&#34;lightweight-migration&#34;&gt;lightweight migration&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.hackingwithswift.com/quick-start/swiftdata/lightweight-vs-complex-migrations&#34;&gt;https://www.hackingwithswift.com/quick-start/swiftdata/lightweight-vs-complex-migrations&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果有新增欄位，可以用 lightweight migration&lt;/p&gt;&#xA;&lt;p&gt;記得要加上預設值，不然會 crash&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/swiftui%E7%9A%84identifiable--equable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/swiftui%E7%9A%84identifiable--equable/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>/drafts/%E4%BD%BF%E7%94%A8%E6%A2%9D%E6%AC%BE-%E8%8B%B1%E6%96%87%E7%89%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/%E4%BD%BF%E7%94%A8%E6%A2%9D%E6%AC%BE-%E8%8B%B1%E6%96%87%E7%89%88/</guid>
      <description>&lt;h2 id=&#34;terms-of-use&#34;&gt;Terms of Use&lt;/h2&gt;&#xA;&lt;p&gt;EnterHealth (following call &amp;ldquo;Eh&amp;rdquo; or &amp;ldquo;we&amp;rdquo;) provide to read and write blood pressure, heart rate, etc. health record from Apple.Inc Health app. (following call &amp;ldquo;Health app&amp;rdquo;)&lt;/p&gt;&#xA;&lt;p&gt;All that data will store in Health app&lt;/p&gt;&#xA;&lt;p&gt;When you delete record in Eh,&#xA;we will backup that record in local to make sure you can restore it any time.&lt;/p&gt;&#xA;&lt;p&gt;If you don&amp;rsquo;t want to restore this record you can delete permanently.&#xA;There no way to restore it again.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/drafts/%E6%9C%AA%E5%91%BD%E5%90%8D-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/drafts/%E6%9C%AA%E5%91%BD%E5%90%8D-3/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/1783405/how-do-i-check-out-a-remote-git-branch&#34;&gt;https://stackoverflow.com/questions/1783405/how-do-i-check-out-a-remote-git-branch&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/GraalVM&#34;&gt;https://en.wikipedia.org/wiki/GraalVM&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.zhihu.com/question/430792464&#34;&gt;https://www.zhihu.com/question/430792464&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://benjr.tw/98233&#34;&gt;https://benjr.tw/98233&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/xiaowuzi/p/3485302.html&#34;&gt;https://www.cnblogs.com/xiaowuzi/p/3485302.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.spring.io/spring-data/jpa/docs/current/reference/html/&#34;&gt;https://docs.spring.io/spring-data/jpa/docs/current/reference/html/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/memo/git-command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/memo/git-command/</guid>
      <description>&lt;h1 id=&#34;git-主幹名稱&#34;&gt;Git 主幹名稱&lt;/h1&gt;&#xA;&lt;p&gt;因為SJW的不懈努力，&lt;code&gt;git&lt;/code&gt;的主幹名稱從&lt;code&gt;master&lt;/code&gt;改成&lt;code&gt;main&lt;/code&gt;了&lt;/p&gt;&#xA;&lt;p&gt;如果是早期的&lt;code&gt;config&lt;/code&gt;還是使用&lt;code&gt;master&lt;/code&gt;的命名的話，&lt;code&gt;git&lt;/code&gt;會建議你更換名稱。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;更換git預設的主幹名稱&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;git config &amp;ndash;global init.defaultBranch &amp;lt;#NewMainBranchName#&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;更換當前主幹/分支名稱&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;git branch -m main&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/memo/git-%E9%87%8D%E6%96%B0%E5%91%BD%E5%90%8D%E9%81%A0%E7%AB%AF%E5%88%86%E6%94%AF/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/memo/git-%E9%87%8D%E6%96%B0%E5%91%BD%E5%90%8D%E9%81%A0%E7%AB%AF%E5%88%86%E6%94%AF/</guid>
      <description>&lt;h1 id=&#34;git-rename-remote-branch&#34;&gt;Git rename remote branch&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Git checkout -b localBranchname origin/remoteBranchName&lt;/li&gt;&#xA;&lt;li&gt;Git push origin &amp;ndash;delete remoteBranchName&lt;/li&gt;&#xA;&lt;li&gt;Git push origin -u localBranchName&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;or&#34;&gt;OR&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;尚未測試過&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Git push origin : remoteBranchName newBranchName&lt;/li&gt;&#xA;&lt;li&gt;Git push origin -u newBranchName&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/memo/git%E4%BD%BF%E7%94%A8personalaccesstoken/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/memo/git%E4%BD%BF%E7%94%A8personalaccesstoken/</guid>
      <description>&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在Github上設定personal access token&lt;/li&gt;&#xA;&lt;li&gt;如果要做git clone的時候，要用https下載&lt;/li&gt;&#xA;&lt;li&gt;這時候要打密碼，如果不記起來的話密碼可能就不能用第二次了。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# 要記憶密碼的話&#xA;git config --global credential.helper cache&#xA;&#xA;# 如果要清除掉設定的話&#xA;git config --global --unset credential.helper&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/memo/%E5%B0%8E%E5%85%A5swiftlint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/memo/%E5%B0%8E%E5%85%A5swiftlint/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>/memo/%E7%94%A8terminal%E5%9F%B7%E8%A1%8Cxcode%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/memo/%E7%94%A8terminal%E5%9F%B7%E8%A1%8Cxcode%E5%96%AE%E5%85%83%E6%B8%AC%E8%A9%A6/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PROJECT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SCHEME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;xxxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xcodebuild test &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-project $PROJECT.proj &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-scheme $SCHEME &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-destination &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;platform=iOS Simulator,OS=15.1,name=iPhone 8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-enable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xcodebuild &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-project $PROJECT.xcodeproj &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-scheme $SCHEME &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-destination &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;platform=iOS Simulator,name=iPhone 8,OS=15.2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;-enableCodeCoverage YES test&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;// view xcresult&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;brew install XCTestHtmlReport/xchtmlreport/xchtmlreport&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title></title>
      <link>/memo/%E9%97%9C%E6%96%BCssh%E7%99%BB%E5%85%A5%E9%80%99%E5%9B%9E%E4%BA%8B/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/memo/%E9%97%9C%E6%96%BCssh%E7%99%BB%E5%85%A5%E9%80%99%E5%9B%9E%E4%BA%8B/</guid>
      <description>&lt;h1 id=&#34;關於ssh登入這回事&#34;&gt;關於ssh登入這回事&lt;/h1&gt;&#xA;&lt;p&gt;交接資料中有許多東西都是與帳號密碼相關，&#xA;但是在交接資料中可以看到帳號密碼是一件非常詭異的事情。&lt;/p&gt;&#xA;&lt;p&gt;這就讓我去思考遠端連線到底應該要怎麼做才會是正確的。&lt;/p&gt;&#xA;&lt;p&gt;帳號跟密碼只應該由MIS保留，且取得需要有相關授權之類的&lt;/p&gt;&#xA;&lt;p&gt;MIS應該負責創建使用者的RSA金鑰&lt;/p&gt;&#xA;&lt;p&gt;由MIS負責配發金鑰，讓使用者能夠進行連線或是相關操作。&lt;/p&gt;&#xA;&lt;p&gt;當同事離職以後，也應該由MIS負責將對應的金鑰從遠端機器中刪除。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
